'use server';

/**
 * @fileOverview This file defines a Genkit flow for providing personalized dosage recommendations for POTS management.
 *
 * The flow takes user-specific POTS-related information and returns dosage recommendations generated by an LLM.
 * - dosageRecommendations - A function that handles the dosage recommendation process.
 * - DosageRecommendationsInput - The input type for the dosageRecommendations function.
 * - DosageRecommendationsOutput - The return type for the dosageRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const DosageRecommendationsInputSchema = z.object({
  medicationName: z.string().describe('The name of the medication.'),
  currentDosage: z.string().describe('The current dosage of the medication.'),
  symptoms: z.string().describe('A description of current POTS symptoms.'),
  otherMedications: z.string().describe('A list of other medications being taken.'),
  lifestyle: z.string().describe('Description of current lifestyle, diet, and exercise habits.'),
});

export type DosageRecommendationsInput = z.infer<typeof DosageRecommendationsInputSchema>;

const DosageRecommendationsOutputSchema = z.object({
  recommendation: z.string().describe('The personalized dosage recommendation.'),
  reasoning: z.string().describe('The reasoning behind the recommendation.'),
});

export type DosageRecommendationsOutput = z.infer<typeof DosageRecommendationsOutputSchema>;

export async function dosageRecommendations(input: DosageRecommendationsInput): Promise<DosageRecommendationsOutput> {
  return dosageRecommendationsFlow(input);
}

const dosageRecommendationsPrompt = ai.definePrompt({
  name: 'dosageRecommendationsPrompt',
  input: {schema: DosageRecommendationsInputSchema},
  output: {schema: DosageRecommendationsOutputSchema},
  prompt: `You are a highly experienced pharmacist specializing in POTS (Postural Orthostatic Tachycardia Syndrome) management.

  Based on the information provided, give a personalized dosage recommendation and explain your reasoning.

  Medication Name: {{{medicationName}}}
  Current Dosage: {{{currentDosage}}}
  Symptoms: {{{symptoms}}}
  Other Medications: {{{otherMedications}}}
  Lifestyle: {{{lifestyle}}}

  Provide a clear and concise recommendation, along with a detailed explanation of your reasoning.`,
});

const dosageRecommendationsFlow = ai.defineFlow(
  {
    name: 'dosageRecommendationsFlow',
    inputSchema: DosageRecommendationsInputSchema,
    outputSchema: DosageRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await dosageRecommendationsPrompt(input);
    return output!;
  }
);
